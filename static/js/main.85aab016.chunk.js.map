{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","data","msg","className","type","role","data-bs-dismiss","aria-label","aria-hidden","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-labelledby","class","onClick","themetoggle","htmlfor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","loCase","toLowerCase","split","length","defaultProps","App","theme","setTheme","alert","setAlert","showalert","setTimeout","document","body","style","backgroundColor","color","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.85aab016.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        props.data.msg && \n        <>\n         <div className=\"container\">\n         <div className={`alert alert-${props.data.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{props.data.msg}</strong>\n                <button\n                    type=\"button\"\n                    className=\"btn-close\"\n                    data-bs-dismiss=\"alert\"\n                    aria-label=\"close\"\n                >\n                    <span aria-hidden=\"true\">Ã—</span>\n                </button>\n            </div>\n         </div>\n         </>\n\n    )\n}\n","import React from 'react'\n// import {\n\n//   Link\n// } from \"react-router-dom\";\nimport propTypes from 'prop-types'\nexport default function Navbar(props) {\n    return (\n        <>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">about</Link> */}\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/\">Link</a>\n        </li>\n        <li className=\"nav-item dropdown\">\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\n            <li><hr className=\"dropdown-divider\"/></li>\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\n          </ul>\n        </li>\n        <li className=\"nav-item\">\n          {/* <a className=\"nav-link disabled\">Disabled</a> */}\n        </li>\n      </ul>\n\n\n      <div class=\"form-check form-switch \" >\n  <input className=\"form-check-input btn-lg\" onClick={props.themetoggle} type=\"checkbox\" id=\"Thememode\"/>\n  <label className={`form-check-label text-${props.mode === \"light\"? \"dark\":\"light\"}`} htmlfor=\"Thememode\"> enable {props.mode === \"light\"? \"dark\":\"light\"} mode </label>\n</div>\n\n      {/* <form className=\"d-flex\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n    </div>\n  </div>\n</nav></>\n    )\n}\n\nNavbar.propTypes={\n    title:propTypes.string.isRequired\n}\n\nNavbar.defaultProps={\n    title:\"set tile here\"\n}\n","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n\n    const [text,setText] = useState(\"\");\n    const handleClear =()=>{\n       setText(\"\")\n       props.showAlert(\"cleared\", \"success\")\n\n    }\n    const handleOnChange=(event)=>{\n            setText(event.target.value)\n    }\n    const handleConvert=()=>{\n        let newText = text.toUpperCase();\n        setText(newText);\n        props.showAlert(\"converted to uppercase\", \"success\")\n        }\n\n        const handletoloConvert=()=>{\n            let loCase = text.toLowerCase(text);\n            setText(loCase)\n            props.showAlert(\"converted to lowercase\", \"success\")\n       \n        }\n    return (\n       <>\n       \n       <h4>{props.heading}</h4>\n       <div  className=\"mb-3\">\n\n  <textarea   className=\"form-control\" value={text}  onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\n</div>\n\n<button className=\"btn btn-primary\"  onClick={handleConvert}>Convert to upperase</button><button className=\"btn btn-primary mx-1\"  onClick={handletoloConvert}>Convert to LowerCase</button>\n\n<button className=\"btn btn-primary\"  onClick={handleClear}>Clear</button>\n<h3 className=\"my-2\">Summary</h3>\n<p> words {text.split(' ').length-1 } and letters {text.length} time to read {0.8 * (text.split(\" \").length) } minutes</p>\n\n<h4>Preview</h4>\n<p>{text}</p>\n</> \n    )\n}\n ","\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './components/Alert';\n//  import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  let [theme , setTheme]= useState('light');\n  let [alert, setAlert]= useState({msg:null, type:null});\n\n  const showalert=(msg,type)=>{\n\n    setAlert({\n      msg,\n      type\n    })\n    setTimeout(()=>{\n      setAlert({msg:null,type:null})\n    },1500)\n\n  }\n\n  const switchMode = ()=>{\n    if(theme === \"light\"){\n      setTheme('dark');    \n      document.body.style.backgroundColor=\"#1c4a49\";\n      document.body.style.color=\"white\";\n      document.getElementById(\"mybox\").style.backgroundColor=\"grey\";\n      showalert('dark mode enabled', 'success')\n    }else{\n      setTheme('light');\n      document.body.style.backgroundColor=\"white\";\n      document.body.style.color=\"black\";\n      document.getElementById(\"mybox\").style.backgroundColor=\"white\";\n      showalert('light mode enabled', 'success')\n    }\n  }\n  return (\n    <>\n\n{/* <Router> */}\n      <Navbar title=\"Word\" heading=\"Enter Text\" mode={theme} themetoggle={switchMode} />\n      <Alert data={alert} />\n      <div className=\"container\">\n        <TextForm showAlert={showalert}  heading=\"Enter Text\" mode=\"light\" />\n        \n        {/* <Routes>\n          <Route path=\"/about\" element={<About />}>\n            \n            \n          </Route>\n         \n        </Routes> */}\n        \n\n        {/* <About /> */}\n\n      </div>\n      {/* </Router> */}\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}